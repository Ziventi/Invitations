version: 2.1

executors:
  node:
    docker:
      - image: zzavidd/puppeteer
  ssh:
    docker:
      - image: arvindr226/alpine-ssh

commands:
  install_dependencies:
    description: 'Installs all project dependencies.'
    steps:
      - checkout
      - run:
          name: Consolidate yarn.lock files
          command: packages=(. server utils) && printf '%s\n' "${packages[@]}" | awk -F packages '{printf "\"%s/yarn.lock\" ", $1}' | xargs cat > combined-yarn-lock.txt
          working_directory: ./code
      - run:
          name: Install root dependencies
          command: yarn install --frozen-lockfile
          working_directory: ./code
      # - run:
      #     name: Install server dependencies
      #     command: yarn install --frozen-lockfile
      #     working_directory: ./code/server
      - run:
          name: Install utils dependencies
          command: yarn install --frozen-lockfile
          working_directory: ./code/utils
      - run:
          name: Build utils
          command: yarn run build utils
          working_directory: ./code
      - run:
          name: Install server dependencies
          command: yarn install --frozen-lockfile
          working_directory: ./code/server
  transfer_scripts:
    description: 'Tranfers deployment scripts via SCP'
    steps:
      - checkout
      - run:
          name: Transfer scripts
          command: scp -o StrictHostKeyChecking=no -r ./docker/scripts/* $SSH_USER@$SSH_ADDRESS:/home/circleci/scripts/
          no_output_timeout: 30s

jobs:
  inspect:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Run TypeScript checks
          command: yarn run check
          working_directory: ./code
      - run:
          name: Run Prettier checks
          command: yarn run prettier
          working_directory: ./code
      - run:
          name: Run ESLint
          command: yarn run eslint --max-warnings 0
          working_directory: ./code
      - run:
          name: Run Stylelint
          command: yarn run stylelint
          working_directory: ./code
  test:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Build utils
          command: yarn run build utils
          working_directory: ./code
      - run:
          name: Run tests
          command: yarn run test
          working_directory: ./code
          no_output_timeout: 2m

  deploy_dev:
    executor: ssh
    steps:
      - transfer_scripts
      - run:
          name: Updates secrets and run staging deployment
          command: |
            ssh -o StrictHostKeyChecking=no -v $SSH_USER@$SSH_ADDRESS "./scripts/deploy.dev.sh"
  deploy_prod:
    executor: ssh
    steps:
      - transfer_scripts
      - run:
          name: Updates secrets and run production deployment
          command: |
            ssh -o StrictHostKeyChecking=no -v $SSH_USER@$SSH_ADDRESS ./scripts/deploy.prod.sh

workflows:
  build-inspect-test:
    jobs:
      - inspect
      - test
      - deploy_dev:
          requires:
            - inspect
            - test
          filters:
            branches:
              only:
                - main
      - deploy_prod:
          requires:
            - inspect
            - test
          filters:
            branches:
              only:
                - production